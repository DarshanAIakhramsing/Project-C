@page "/sessies"

@using Project_C.Data
@using Project_C.Models
@using Project_C.Services

@inject SessionCRUD sessionCRUD


<AuthorizeView Roles="Organisator, Admin">
    <Authorized>
        @if (Sessions == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <button @onclick="@Add" class="btn btn-success">Sessie toevoegen</button>
            <table class='table table-hover'>
                <thead>
                    <tr>
                        <th>Sessie naam</th>
                        <th>Sessie locatie</th>
                        <th>Datum</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Sessions)
                    {
                        <tr @onclick="@(() => Show(item))">
                            <td>@item.Name</td>
                            <td>@item.Location</td>
                            <td>@item.Date</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </Authorized>
    <NotAuthorized>
        U bent niet geautoriseerd.
    </NotAuthorized>
</AuthorizeView>

@switch (mode)
{
    case MODE.Add:
        <input placeholder="Naam" @bind="@CurrentSession.Name" />
        <br />
        <input placeholder="Locatie" @bind="@CurrentSession.Location" />
        <br />
        <input placeholder="Datum" @bind="@CurrentSession.Date" />
        <br />
        <button @onclick="@Insert" class="btn btn-warning">Insert</button>
        break;

    case MODE.EditDelete:
        <input type="hidden" @bind-value="@CurrentSession.Id" />
        <br />
        <input placeholder="First Name" @bind-value="@CurrentSession.Name" />
        <br />
        <input placeholder="Last Name" @bind-value="@CurrentSession.Location" />
        <br />
        <input placeholder="Datum" @bind-value="@CurrentSession.Date" />
        <br />
        <button @onclick="@Update" class="btn btn-primary">Update</button>
        <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>
        <button @onclick="@Delete" class="btn btn-danger">Delete</button>
        break;
}


@code {
    public System.Collections.Generic.IList<SessionInfo> Sessions { get; set; }

    SessionInfo CurrentSession { get; set; } = new();

    private enum MODE { None, Add, EditDelete };

    MODE mode = MODE.None;
    SessionInfo sessie;

    protected async override void OnInitialized()
    {
        await Load();
        StateHasChanged();
    }

    protected async Task Load()
    {
        Sessions = await sessionCRUD.GetSessionsAsync();
    }

    protected async Task Insert()
    {
        PrepareModel();

        await sessionCRUD.InsertSessionAsync(CurrentSession);
        Sessions.Add(CurrentSession);
        ClearFields();

        mode = MODE.None;
    }

    protected void Add()
    {
        ClearFields();
        mode = MODE.Add;
    }

    protected async Task Update()
    {
        PrepareModel();

        await sessionCRUD.UpdateSessionAsync(CurrentSession);
        ClearFields();
        mode = MODE.None;
    }

    protected async Task Delete()
    {
        await sessionCRUD.DeleteSessionAsync(CurrentSession);
        Sessions.Remove(CurrentSession);
        ClearFields();
        mode = MODE.None;
    }

    private void PrepareModel()
    {
        if (string.IsNullOrWhiteSpace(CurrentSession.Name))
            CurrentSession.Name = null;
        if (string.IsNullOrWhiteSpace(CurrentSession.Location))
            CurrentSession.Location = null;
    }

    protected void ClearFields()
    {
        CurrentSession = new();
    }

    protected void Show(SessionInfo session)
    {
        CurrentSession = session;
        mode = MODE.EditDelete;
    }

}
