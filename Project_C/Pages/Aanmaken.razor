@page "/Aanmaken"

@using Project_C.Data
@using Project_C.Models
@using Project_C.Services

@inject SessionCRUD sessionCRUD

@inherits OwningComponentBase<SessionService>

<AuthorizeView Roles="Organisator">
    <Authorized>
        @if (session == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <button @onclick="@Add" class="btn btn-success">Sessie toevoegen</button>
            <table class='table table-hover'>
                <thead>
                    <tr>
                        <th>Sessie naam</th>
                        <th>Sessie locatie</th>
                        <th>Datum</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in session)
                    {
                        <tr @onclick="@(() => Show(item.session_id))">
                            <td>@item.session_name</td>
                            <td>@item.session_location</td>
                            <td>@item.session_date</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </Authorized>
</AuthorizeView>


    @if (session != null && mode == MODE.Add) // Insert form
    {
        <input placeholder="Naam" @bind="@session_name" />
        <br />
        <input placeholder="Locatie" @bind="@session_location" />
        <br />
        <input placeholder="Datum" @bind="@session_date" />
        <br />
        <button @onclick="@Insert" class="btn btn-warning">Insert</button>
    }

    @if (session != null && mode == MODE.EditDelete) // Update & Delete form
    {
        <input type="hidden" @bind="@session_id" />
        <br />
        <input placeholder="First Name" @bind="@session_name" />
        <br />
        <input placeholder="Last Name" @bind="@session_location" />
        <br />
        <input placeholder="Last Name" @bind="@session_date" />
        <br />
        <button @onclick="@Update" class="btn btn-primary">Update</button>
        <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>
        <button @onclick="@Delete" class="btn btn-danger">Delete</button>
    }

    @functions {
        public System.Collections.Generic.IList<SessionInfo> session;

        int session_id;
        string session_name;
        string session_location;
        DateTime session_date;

        private enum MODE { None, Add, EditDelete };
        MODE mode = MODE.None;
        SessionInfo sessie;

        protected async override void OnInitialized()
        {
            session = Service.DisplaySession();
            await load();
        }

        protected async Task load()
        {
            session = await sessionCRUD.GetSessionAsync();
        }

        protected async Task Insert()
        {

            SessionInfo s = new SessionInfo()
            {
                session_name = session_name,
                session_location = session_location,
                session_date = session_date
            };

            await sessionCRUD.InsertSessionAsync(s);
            ClearFields();
            await load();

            mode = MODE.None;
        }

        protected void Add()
        {
            ClearFields();
            mode = MODE.Add;
        }

        protected async Task Update()
        {

            SessionInfo s = new SessionInfo()
            {
                session_name = session_name,
                session_location = session_location,
                session_date = session_date
            };

            await sessionCRUD.UpdateSessionAsync(session_id, s);
            ClearFields();
            await load();
            mode = MODE.None;
        }

        protected async Task Delete()
        {
            await sessionCRUD.DeleteSessionAsync(session_id);
            ClearFields();
            await load();
            mode = MODE.None;
        }


        protected void ClearFields()
        {
            session_name = string.Empty;
            session_location = string.Empty;
        }

        protected async Task Show(int id)
        {
            SessionInfo session = await sessionCRUD.GetSessionByIdAsync(id);
            session_id = session.session_id;
            session_name = session.session_name;
            session_location = session.session_location;
            session_date = session.session_date;
            mode = MODE.EditDelete;
        }

    }
