@page "/employees"
@using Project_C.Data;
@using Project_C.Services;
@using Project_C.Models;
@using Microsoft.AspNetCore.Identity
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ApplicationDbContext database
@inject AuthenticationState UserManager
@inject UserManager<User> UserManager
@inherits OwningComponentBase<UserService>

@*V Explanation on Index page V*@
<AuthorizeView>
    <NotAuthorized>
        U bent niet geautoriseerd.
    </NotAuthorized>
</AuthorizeView>
<AuthorizeView Roles="Admin">


    <h3>Person</h3>

    <table class="table">
        <thead class="thead-dark">
            <tr>
                <th>Email</th>
                <th>Sessies bijgewoond</th>
            </tr>
        </thead>
        <tbody>
            @*Displays the email and how many invites that person accepted in a table*@
            @foreach (var user in users)
            {
                <tr>
                    <td>@user.Email</td>
                    <td>@user.accept_invitation</td>
                </tr>
            }
        </tbody>
    </table>

    @*Two input fields one of type text which is a box you can write it and one button, the button enables the method SearchIssues and the text searchTerm
        will be placed in a private string, later called on by the method SearchIssues*@
    <input type="text" @bind-value="@searchTerm" />
    <input type="button" value="Search" @onclick="@SearchIssues" />

</AuthorizeView>

@code {
    //List of all the users in the database
    public System.Collections.Generic.IList<User> users;

    //This displays every user on the page on startup
    protected override void OnInitialized()
    {
        users = Service.DisplayUser();
    }

    //A private string of the text that was filled in in the textbox with value searchTerm
    private string searchTerm;

    //This will display only the users with the exact name that was put into the searchbox (i.e. Example@hotmail.com)
    protected void SearchIssues()
    {
        users = Service.DisplayEmail(searchTerm);
    }
}
